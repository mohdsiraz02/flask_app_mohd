
name: Full-Stack CI (Flask & React)

on:
  push:
    branches:
      - main
      - master
      - feature/*
      - bugfix/*
      - hotfix/*
      - release/*
  pull_request:
    branches:
      - main
      - master

jobs:
  # Job for Flask Backend CI/CD
  build_backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout backend repository
      uses: actions/checkout@v4 # Recommended to use the latest version for security and features
      with:
        # Agar aapka Flask backend code root directory mein hai, toh path '.' rakhein.
        # Agar yeh 'backend/' jaise kisi sub-directory mein hai, toh path: './backend' set karein.
        path: '.' # Assuming Flask backend is in the root or will be handled by working-directory later

    - name: Set up Python environment
      uses: actions/setup-python@v5 # Recommended to use the latest version
      with:
        python-version: '3.10' # Aapke previous configuration ke anusaar
        cache: 'pip' # Pip dependencies ko cache karein

    - name: Install backend dependencies
      # Agar aapka backend code 'backend/' folder mein hai, toh working-directory set karein
      # working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt # Ensure requirements.txt root mein ya working-directory mein hai
        pip install pytest Flask # Pytest aur Flask ko explicitly install karein

    - name: Run backend tests (pytest)
      # Agar aapke tests 'backend/' folder mein hain, toh working-directory set karein
      # working-directory: ./backend
      run: pytest # Pytest ko run karein

    - name: Check Flask App
      # Is step ko theek kiya gaya hai taaki app background mein run ho aur curl se check ho
      # Agar aapka app.py 'backend/' folder mein hai, toh working-directory set karein
      # working-directory: ./backend
      run: |
        python app.py & # Flask app ko background mein run karein (NOTE THE '&')
        sleep 5 # Thoda wait karein app ke start hone ke liye
        curl --fail http://localhost:5000/ || curl --fail http://localhost:5000/status # Root ya status endpoint ko check karein
        # 'curl --fail' ensures the step fails if the endpoint is not reachable or returns an error.

  # Job for React Frontend CI
  build_frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout frontend code
      uses: actions/checkout@v4 # Recommended to use the latest version

    - name: Set up Node.js environment
      uses: actions/setup-node@v3 # Aapke provide kiye gaye code ke anusaar
      with:
        node-version: '18' # Aapke provide kiye gaye code ke anusaar
        cache: 'npm' # NPM dependencies ko cache karein

    - name: Install frontend dependencies
      working-directory: ./frontend # Yeh zaroori hai agar React code 'frontend/' folder mein hai
      run: npm install

    - name: Build frontend application
      working-directory: ./frontend # Yeh zaroori hai agar React code 'frontend/' folder mein hai
      run: npm run build

    - name: Upload frontend build artifact
      uses: actions/upload-artifact@v4 # <<< Yahaan v3 se v4 kiya gaya hai
      with:
        name: frontend-build
        path: frontend/build # Yeh path specify karta hai ki kaun si directory ke contents ko upload karna hai
